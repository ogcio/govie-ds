name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Git tag to deploy"
        required: true
        default: "last-release"

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    environment: prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag }}
          token: ${{ secrets.REPO_PAT }}

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build and test
        env:
          DEPLOY_ENV: production
        run: |
          corepack enable          
          pnpm install --frozen-lockfile --ignore-scripts
          pnpm format:check --parallel=3
          pnpm build --parallel=3
          pnpm test --parallel=3

      - name: Setup AWS ECR Details
        if: github.ref == 'refs/heads/main'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Sign in to Amazon ECR
        if: github.ref == 'refs/heads/main'
        id: ecr-sign-in
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        if: github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v3

      - name: Build and push docker
        if: github.ref == 'refs/heads/main'
        env:
          ECR_REGISTRY: ${{ steps.ecr-sign-in.outputs.registry }}
          ECR_REPOSITORY: life-events-design-system
          IMAGE_TAG: latest # TODO: env vars in Nx project.json
        run: |
          pnpm ds:deploy --parallel=1
