name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: "Select deployment environment"
        required: true
        type: choice
        options:
          - prod
          - dev
        default: dev

permissions:
  contents: write
  pull-requests: write
  repository-projects: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    permissions:
      id-token: write
      contents: read

    environment: ${{ github.event.inputs.environment || 'dev' }}
    env:
      environment: ${{ github.event.inputs.environment || 'dev' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.REPO_PAT }}

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Configure git
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Install dependencies
        run: |
          corepack enable          
          pnpm install --frozen-lockfile --ignore-scripts

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Format and Lint
        run: |
          pnpm format:check
          pnpm lint

      - name: Build and test
        run: |
          pnpm build
          pnpm test

      - name: Create Figma tokens flat artifact
        uses: actions/upload-artifact@v4
        with:
          name: figma-tokens
          path: packages/design/figma/dist/tokens

      - name: Create Figma tokens flat artifact
        uses: actions/upload-artifact@v4
        with:
          name: figma-tokens-flat
          path: packages/design/figma/dist/tokens-flat

  determine-affected:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    needs: build
    outputs:
      html_affected: ${{ steps.check-html-affected.outputs.html_affected }}
      react_affected: ${{ steps.check-react-affected.outputs.react_affected }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: |
          corepack enable
          pnpm install --frozen-lockfile --ignore-scripts

      - name: Determine affected projects
        id: affected
        run: |
          pnpm nx show projects --affected --base=origin/main~1 --head=HEAD > affected.txt
          cat affected.txt

      - name: Set environment output if HTML package is affected
        id: check-html-affected
        run: |
          if grep -q "@govie-ds/html" affected.txt; then
            echo "html_affected=true" >> "$GITHUB_OUTPUT"
          else
            echo "html_affected=false" >> $GITHUB_OUTPUT
          fi
      - name: Set environment output if React package is affected
        id: check-react-affected
        run: |
          if grep -q "@govie-ds/react" affected.txt; then
            echo "react_affected=true" >> $GITHUB_OUTPUT
          else
            echo "react_affected=false" >> $GITHUB_OUTPUT
          fi

  chromatic-html:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    environment: dev
    needs: determine-affected
    if: ${{ needs.determine-affected.outputs.html_affected == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: |
          corepack enable
          pnpm install --frozen-lockfile --ignore-scripts

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Storybook build
        run: pnpm html:storybook:build

      - name: Publish Global HTML Library to Chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN_HTML }}
          storybookBuildDir: packages/html/ds/storybook-static
          autoAcceptChanges: "main"

  chromatic-react:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    environment: dev
    needs: determine-affected
    if: ${{ needs.determine-affected.outputs.react_affected == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: |
          corepack enable
          pnpm install --frozen-lockfile --ignore-scripts

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Storybook build
        run: pnpm react:storybook:build

      - name: Publish React Library to Chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN_REACT }}
          storybookBuildDir: packages/react/ds/storybook-static
          autoAcceptChanges: "main"
