import { testFormatter } from './test-formatter.js';
import { typeScriptConstsFormatter } from './typescript-consts.js';

describe('typeScriptConstsFormatter', () => {
  const { formatArray } = testFormatter({
    formatter: typeScriptConstsFormatter,
  });

  it('should return autogenerated message with no tokens', async () => {
    const formatted = await formatArray({ allTokens: [] });

    expect(formatted).toContain(
      ' * Do not edit directly, this file was auto-generated.',
    );
  });

  it('should return PascalCase typescript variable const with token value', async () => {
    const formatted = await formatArray({
      allTokens: [
        {
          name: 'color.gray.500',
          type: 'color',
          value: '#333333',
        },
      ],
    });

    expect(formatted).toContain(`export const ColorGray500 = "#333333";`);
  });

  it('should return camelCase typescript variable const with token value and camelCase option', async () => {
    const formatted = await formatArray({
      allTokens: [
        {
          name: 'color.gray.500',
          type: 'color',
          value: '#333333',
        },
      ],
      options: {
        camelCase: true,
      },
    });

    expect(formatted).toContain(`export const colorGray500 = "#333333";`);
  });
});
