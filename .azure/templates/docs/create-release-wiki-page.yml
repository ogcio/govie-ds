steps:
  - checkout: self
    persistCredentials: true
    displayName: Checkout code
  - bash: |
      set -euo pipefail

      current_date=$(date +"%Y-%m-%d")
      release_page_path="/Release%20Notes/Design%20System/$current_date"
      project_wiki_base_url="$AZURE_DEVOPS_BASE_URL/Digital%20Services%20Programme/_apis/wiki/wikis/Digital-Services-Programme.wiki"
      existing_release_page_http_code=$(curl --output /dev/null --silent --write-out "%{http_code}\n" --request GET --location "$project_wiki_base_url/pages?path=$release_page_path&api-version=7.2-preview.1" --header 'Accept: application/json' --user "$AZURE_DEVOPS_API_USERNAME:$AZURE_DEVOPS_API_TOKEN")
      escaped_pipeline_url=${PIPELINE_URL//' '/'%20'}

      template_wiki_page_content=''
      if [ "$existing_release_page_http_code" -eq 404 ]; then
        echo 'Fetching release notes template page...'
        template_wiki_page_content=$(curl --silent --request GET --location "$project_wiki_base_url/pages/4136?includeContent=true&api-version=7.2-preview.1" --header 'Accept: application/json' --user "$AZURE_DEVOPS_API_USERNAME:$AZURE_DEVOPS_API_TOKEN" | jq '.content')
      else
        echo 'Fetching existing release notes page...'
        template_wiki_page_content=$(curl --silent --request GET --location "$project_wiki_base_url/pages?path=$release_page_path&includeContent=true&api-version=7.2-preview.1" --header 'Accept: application/json' --user "$AZURE_DEVOPS_API_USERNAME:$AZURE_DEVOPS_API_TOKEN" | jq '.content')
      fi

      echo 'Extracting tickets list...'
      release_tickets_list=$(git log latest-release..HEAD --oneline | grep -o -E '[Aa][Bb]#[0-9]+' | sed 's/[Aa][Bb]#/- #/' | sort | uniq)

      echo 'Extracted tickets:'
      echo "$release_tickets_list"

      echo 'Deleting existing Wiki page...'
      curl --request DELETE --silent --location "$project_wiki_base_url/pages?path=$release_page_path&api-version=7.2-preview.1" --header 'Accept: application/json' --header 'Content-Type: application/json'  --user "$AZURE_DEVOPS_API_USERNAME:$AZURE_DEVOPS_API_TOKEN"

      echo 'Creating release notes Wiki page...'

      release_wiki_page_content=${release_wiki_page_content//'[app_release_pipeline_run_placeholder]'/$escaped_pipeline_url}
      curl --request PUT --silent --location "$project_wiki_base_url/pages?path=$release_page_path&api-version=7.2-preview.1" --header 'Accept: application/json' --header 'Content-Type: application/json'  --user "$AZURE_DEVOPS_API_USERNAME:$AZURE_DEVOPS_API_TOKEN" --data "{\"content\":$release_wiki_page_content}"

      release_tickets_list="${release_tickets_list//$'\n'/\\n}"
      release_wiki_page_content=${template_wiki_page_content//'[app_tickets_list_placeholder]'/$release_tickets_list}

      release_page_update_response=$(curl --silent --request PUT --location "$project_wiki_base_url/pages?path=$release_page_path&api-version=7.2-preview.1" --header 'Accept: application/json' --header 'Content-Type: application/json' --header "If-Match: $release_wiki_page_version" --user "$AZURE_DEVOPS_API_USERNAME:$AZURE_DEVOPS_API_TOKEN" --data "{\"content\":$release_wiki_page_content}" | jq)
      release_page_url=$(echo "$release_page_update_response" | jq -r '.remoteUrl')
      echo "Release notes Wiki page URL: $release_page_url"
    displayName: Create Wiki Page
    env:
      AZURE_DEVOPS_API_USERNAME: $(ADO_API_USERNAME)
      AZURE_DEVOPS_API_TOKEN: $(ADO_API_TOKEN)
      AZURE_DEVOPS_BASE_URL: $(ADO_BASE_URL)
